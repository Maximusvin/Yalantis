{"version":3,"sources":["UI/Layout/Layout.style.js","UI/Layout/Layout.js","components/App/App.js","components/Employees/Employees.style.js","services/apiUsers.js","redux/employees/employeesActions.js","redux/employees/employeesSelectors.js","components/Employees/Employees.js","redux/employees/employeesOperations.js","redux/employees/employeesReducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Layout","children","App","Title","h1","AlphabetList","ul","AlphabetItem","li","SubTitle","h2","UserItem","InputLabel","label","fetchAPI","fetch","then","data","json","users","fetchEmployeesRequest","createAction","fetchEmployeesSuccess","fetchEmployeesError","getEmployees","state","employees","entities","Employees","useSelector","dispatch","useDispatch","normalizeAlphabet","toUpperCase","split","useEffect","a","sortEmployees","letter","filter","employee","lastName","includes","filterEmployeesByLetter","sort","b","localeCompare","length","map","index","id","firstName","dob","type","createReducer","_","payload","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","thunk","store","configureStore","reducer","employeesReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4jBAEO,IAAMA,EAAYC,IAAOC,IAAV,KCEPC,EAFA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,cAACJ,EAAD,UAAYI,KCS9BC,MARf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,O,i3BCJC,I,IAAMC,EAAQL,IAAOM,GAAV,KAKLC,EAAeP,IAAOQ,GAAV,KAUZC,EAAeT,IAAOU,GAAV,KAEZC,EAAWX,IAAOY,GAAV,KAORC,EAAWb,IAAOU,GAAV,KAIRI,EAAad,IAAOe,MAAV,K,yBCtBRC,EANE,WACf,OAAOC,MAHG,kEAIPC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAIA,M,OCHNC,EAAwBC,YACnC,mCAGWC,EAAwBD,YACnC,mCAGWE,EAAsBF,YACjC,iCCXWG,EAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,UC2EtCC,EA5DG,WAChB,IAAMF,EAAYG,YAAYL,GACxBM,EAAWC,cAEXC,EANS,6BAMoBC,cAAcC,MAAM,IAEvDC,qBAAU,WACRL,ECf0B,uCAAM,WAAMA,GAAN,eAAAM,EAAA,6DAClCN,EAASV,KADyB,kBAIRN,IAJQ,OAI1BY,EAJ0B,OAKhCI,EAASR,EAAsBI,IALC,gDAOhCI,EAASP,EAAoB,EAAD,KAPI,yDAAN,yDDgBzB,CAACO,IAEJ,IAMMO,EAAgB,SAAAC,GAAM,OANI,SAAAA,GAC9B,OAAO,YAAIZ,GAAWa,QAAO,SAAAC,GAAQ,OACnCA,EAASC,SAAS,GAAGR,cAAcS,SAASJ,MAK9CK,CAAwBL,GAAQM,MAAK,SAACR,EAAGS,GAAJ,OACnCT,EAAEK,SAASK,cAAcD,EAAEJ,cAG/B,OACE,qCACE,cAACtC,EAAD,wBACCuB,EAAUqB,OAAS,GAClB,cAAC1C,EAAD,UACG2B,EAAkBgB,KAAI,SAACV,EAAQW,GAAT,OACrB,eAAC1C,EAAD,WACE,cAACE,EAAD,UAAW6B,IAEVD,EAAcC,GAAQS,OAAS,EAC9B,6BACGV,EAAcC,GAAQU,KACrB,gBAAGE,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWV,EAAlB,EAAkBA,SAAlB,EAA4BW,IAA5B,OACE,eAACzC,EAAD,qBACM8B,EADN,YACkBU,GAChB,eAACvC,EAAD,WACE,uBAAOyC,KAAK,UADd,gBAKA,eAACzC,EAAD,WACE,uBAAOyC,KAAK,UADd,cAPaH,QAgBrB,UAvBeD,Y,uBEnCzBtB,EAAW2B,YAAc,GAAD,eAC3BhC,GAAwB,SAACiC,EAAD,YAAMC,YAG3BC,EAAYH,aAAc,GAAD,mBAC5BlC,GAAwB,kBAAM,KADF,cAE5BE,GAAwB,kBAAM,KAFF,cAG5BC,GAAsB,kBAAM,KAHA,IAMzBmC,EAAQJ,YAAc,MAAD,mBACxB/B,GAAsB,SAACgC,EAAD,YAAMC,WADJ,cAExBpC,GAAwB,kBAAM,QAFN,IAKZuC,cAAgB,CAC7BhC,WACA8B,YACAC,UCrBIE,EAAU,sBACXC,YAAqB,CACtBC,mBAAmB,KAFP,CAIdC,MAGWC,EAAQC,YAAe,CAClCC,QAAS,CAAExC,UAAWyC,GACtBC,UAAUC,EACVT,e,MCLFU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINS,SAASC,eAAe,W","file":"static/js/main.1cbc44e3.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  @media (max-width: 1283px) {\n    width: 940px;\n  }\n\n  @media (max-width: 992px) {\n    width: 700px;\n  }\n\n  @media (max-width: 768px) {\n    width: 520px;\n  }\n\n  @media (max-width: 576px) {\n    width: 90%;\n  }\n`;\n","import { Container } from './Layout.style';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nexport default Layout;\n","import { Employees } from 'components';\nimport { Layout } from 'UI/Layout';\n\nfunction App() {\n  return (\n    <Layout>\n      <Employees />\n    </Layout>\n  );\n}\n\nexport default App;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  padding-top: 50px;\n  margin-bottom: 30px;\n`;\n\nexport const AlphabetList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  grid-gap: 35px;\n\n  /* @media (max-width: 576px) {\n    grid-template-columns: repeat(auto-fit, minmax(253px, 1fr));\n  } */\n`;\n\nexport const AlphabetItem = styled.li``;\n\nexport const SubTitle = styled.h2`\n  text-align: center;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n  border-bottom: 1px solid #000;\n`;\n\nexport const UserItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const InputLabel = styled.label`\n  display: block;\n  cursor: pointer;\n  margin-bottom: 5px;\n`;\n","const URL = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\nconst fetchAPI = () => {\n  return fetch(URL)\n    .then(data => data.json())\n    .then(users => users);\n};\n\nexport default fetchAPI;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchEmployeesRequest = createAction(\n  'employees/fetchEmployeesRequest',\n);\n\nexport const fetchEmployeesSuccess = createAction(\n  'employees/fetchEmployeesSuccess',\n);\n\nexport const fetchEmployeesError = createAction(\n  'employees/fetchEmployeesError',\n);\n","export const getEmployees = state => state.employees.entities;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  AlphabetList,\n  AlphabetItem,\n  Title,\n  SubTitle,\n  InputLabel,\n  UserItem,\n} from './Employees.style';\nimport { fetchEmployees } from 'redux/employees/employeesOperations';\nimport { getEmployees } from 'redux/employees/employeesSelectors';\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\nconst Employees = () => {\n  const employees = useSelector(getEmployees);\n  const dispatch = useDispatch();\n\n  const normalizeAlphabet = alphabet.toUpperCase().split('');\n\n  useEffect(() => {\n    dispatch(fetchEmployees());\n  }, [dispatch]);\n\n  const filterEmployeesByLetter = letter => {\n    return [...employees].filter(employee =>\n      employee.lastName[0].toUpperCase().includes(letter),\n    );\n  };\n\n  const sortEmployees = letter =>\n    filterEmployeesByLetter(letter).sort((a, b) =>\n      a.lastName.localeCompare(b.lastName),\n    );\n\n  return (\n    <>\n      <Title>Employees</Title>\n      {employees.length > 0 && (\n        <AlphabetList>\n          {normalizeAlphabet.map((letter, index) => (\n            <AlphabetItem key={index}>\n              <SubTitle>{letter}</SubTitle>\n\n              {sortEmployees(letter).length > 0 ? (\n                <ul>\n                  {sortEmployees(letter).map(\n                    ({ id, firstName, lastName, dob }) => (\n                      <UserItem key={id}>\n                        {`${lastName} ${firstName}`}\n                        <InputLabel>\n                          <input type=\"radio\" />\n                          not active\n                        </InputLabel>\n\n                        <InputLabel>\n                          <input type=\"radio\" />\n                          active\n                        </InputLabel>\n                      </UserItem>\n                    ),\n                  )}\n                </ul>\n              ) : (\n                '-----'\n              )}\n            </AlphabetItem>\n          ))}\n        </AlphabetList>\n      )}\n    </>\n  );\n};\n\nexport default Employees;\n","import fetchAPI from 'services/apiUsers';\nimport {\n  fetchEmployeesRequest,\n  fetchEmployeesSuccess,\n  fetchEmployeesError,\n} from './employeesActions';\n\nexport const fetchEmployees = () => async dispatch => {\n  dispatch(fetchEmployeesRequest());\n\n  try {\n    const employees = await fetchAPI();\n    dispatch(fetchEmployeesSuccess(employees));\n  } catch (error) {\n    dispatch(fetchEmployeesError(error));\n  }\n};\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchEmployeesRequest,\n  fetchEmployeesSuccess,\n  fetchEmployeesError,\n} from './employeesActions';\n\nconst entities = createReducer([], {\n  [fetchEmployeesSuccess]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchEmployeesRequest]: () => true,\n  [fetchEmployeesSuccess]: () => false,\n  [fetchEmployeesError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchEmployeesError]: (_, { payload }) => payload,\n  [fetchEmployeesRequest]: () => null,\n});\n\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport employeesReducer from './employees/employeesReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n  thunk,\n];\n\nexport const store = configureStore({\n  reducer: { employees: employeesReducer },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components';\nimport { store } from 'redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}