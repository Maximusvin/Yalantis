{"version":3,"sources":["UI/Layout/Layout.style.js","UI/Layout/Layout.js","components/App/App.js","components/Employees/Employees.style.js","services/apiUsers.js","redux/employees/employeesActions.js","redux/employees/employeesSelectors.js","components/Employees/Employees.js","redux/employees/employeesOperations.js","components/Employees/EmployeesList/EmployeesList.style.js","redux/selectedEmployees/selectedEmployeesSelectors.js","components/Employees/EmployeesList/EmployeesList.js","components/EmployeesBirthday/EmployeesBirthday.style.js","components/EmployeesBirthday/EmployeesBirthdayList.js","components/EmployeesBirthday/EmployeesBirthday.js","redux/selectedEmployees/selectedEmployeesActions.js","components/RadioControls/RadioControls.style.js","components/RadioControls/RadioControls.js","redux/employees/employeesReducer.js","redux/selectedEmployees/selectedEmployeesReducer.js","redux/store.js","index.js"],"names":["Container","styled","div","Layout","children","App","EmployeesPageWrap","EmployeesWrap","Title","h2","AlphabetList","ul","AlphabetItem","li","SubTitle","h3","fetchAPI","fetch","then","data","json","users","fetchEmployeesRequest","createAction","fetchEmployeesSuccess","fetchEmployeesError","getAllEmployees","state","employees","entities","Employees","useSelector","dispatch","useDispatch","normalizeAlphabet","toUpperCase","split","useEffect","a","sortEmployees","letter","filter","employee","lastName","includes","filterEmployeesByLetter","sort","b","localeCompare","length","map","index","UserItem","User","h4","props","activeClass","getActiveUsersId","selectedEmployeesId","getSelectedEmployees","allUsers","selectedUsersId","item","id","every","e","EmployeesItem","firstName","isActiveUser","EmployeesList","user","EmployeesBirthdayWrap","TitleMonth","UserList","EmployeesBirthdayList","onGetDate","dob","monthsList","EmployeesBirthday","selectedUsers","monthIdx","Date","getMonth","uniqueMonthIdx","Set","currentMonth","uniqueMonthIdxByStartToCurrentMonth","splice","findIndex","idx","getFormatData","fullData","day","getDate","month","year","getFullYear","filterEmployeesByIdxMonth","AddEmployeesId","DeleteEmployeesId","RadioControlsWrap","InputLabel","label","RadioButton","input","RadioControls","isActive","handleChange","event","isCheckedInput","target","value","type","checked","onChange","createReducer","_","payload","isLoading","error","combineReducers","selectedEmployees","middleware","getDefaultMiddleware","serializableCheck","thunk","activeUsersIdConfig","key","storage","blacklist","rootReducer","employeesReducer","selectedEmployeesReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8fd5b054.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  @media (max-width: 1283px) {\n    width: 940px;\n  }\n\n  @media (max-width: 992px) {\n    width: 700px;\n  }\n\n  @media (max-width: 768px) {\n    width: 520px;\n  }\n\n  @media (max-width: 576px) {\n    width: 90%;\n  }\n`;\n","import { Container } from './Layout.style';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nexport default Layout;\n","import { Employees } from 'components';\nimport { Layout } from 'UI/Layout';\n\nfunction App() {\n  return (\n    <Layout>\n      <Employees />\n    </Layout>\n  );\n}\n\nexport default App;\n","import styled from 'styled-components';\n\nexport const EmployeesPageWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 50px;\n`;\n\nexport const EmployeesWrap = styled.div`\n  width: 65%;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n`;\n\nexport const AlphabetList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  grid-gap: 35px;\n\n  /* @media (max-width: 576px) {\n    grid-template-columns: repeat(auto-fit, minmax(253px, 1fr));\n  } */\n`;\n\nexport const AlphabetItem = styled.li``;\n\nexport const SubTitle = styled.h3`\n  text-align: center;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n  border-bottom: 1px solid #000;\n`;\n","const URL = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\nconst fetchAPI = () => {\n  return fetch(URL)\n    .then(data => data.json())\n    .then(users => users);\n};\n\nexport default fetchAPI;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchEmployeesRequest = createAction(\n  'employees/fetchEmployeesRequest',\n);\n\nexport const fetchEmployeesSuccess = createAction(\n  'employees/fetchEmployeesSuccess',\n);\n\nexport const fetchEmployeesError = createAction(\n  'employees/fetchEmployeesError',\n);\n","export const getAllEmployees = state => state.employees.entities;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { EmployeesList, EmployeesBirthday } from 'components';\nimport {\n  EmployeesPageWrap,\n  EmployeesWrap,\n  AlphabetList,\n  AlphabetItem,\n  Title,\n  SubTitle,\n} from './Employees.style';\nimport { fetchEmployees } from 'redux/employees/employeesOperations';\nimport { getAllEmployees } from 'redux/employees/employeesSelectors';\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\nconst Employees = () => {\n  const employees = useSelector(getAllEmployees);\n  const dispatch = useDispatch();\n\n  const normalizeAlphabet = alphabet.toUpperCase().split('');\n\n  useEffect(() => {\n    dispatch(fetchEmployees());\n  }, [dispatch]);\n\n  const filterEmployeesByLetter = letter => {\n    return [...employees].filter(employee =>\n      employee.lastName[0].toUpperCase().includes(letter),\n    );\n  };\n\n  const sortEmployees = letter =>\n    filterEmployeesByLetter(letter).sort((a, b) =>\n      a.lastName.localeCompare(b.lastName),\n    );\n\n  return (\n    <EmployeesPageWrap>\n      <EmployeesWrap>\n        <Title>Employees</Title>\n        {employees.length > 0 && (\n          <AlphabetList>\n            {normalizeAlphabet.map((letter, index) => (\n              <AlphabetItem key={index}>\n                <SubTitle>{letter}</SubTitle>\n\n                {sortEmployees(letter).length > 0 ? (\n                  <EmployeesList employees={sortEmployees(letter)} />\n                ) : (\n                  '-----'\n                )}\n              </AlphabetItem>\n            ))}\n          </AlphabetList>\n        )}\n      </EmployeesWrap>\n\n      <EmployeesBirthday />\n    </EmployeesPageWrap>\n  );\n};\n\nexport default Employees;\n","import fetchAPI from 'services/apiUsers';\nimport {\n  fetchEmployeesRequest,\n  fetchEmployeesSuccess,\n  fetchEmployeesError,\n} from './employeesActions';\n\nexport const fetchEmployees = () => async dispatch => {\n  dispatch(fetchEmployeesRequest());\n\n  try {\n    const employees = await fetchAPI();\n    dispatch(fetchEmployeesSuccess(employees));\n  } catch (error) {\n    dispatch(fetchEmployeesError(error));\n  }\n};\n","import styled from 'styled-components';\n\nexport const UserItem = styled.li`\n  padding: 5px;\n  border-bottom: 1px solid transparent;\n  border-top: 1px solid transparent;\n  transition: all 0.2s linear;\n\n  &:hover {\n    border-top: 1px solid #000;\n    border-bottom: 1px solid #000;\n    background-color: rgb(219, 219, 219);\n  }\n`;\n\nexport const User = styled.h4`\n  margin-bottom: 3px;\n  color: ${props => (props.activeClass ? 'blue' : '')};\n`;\n","import { getAllEmployees } from 'redux/employees/employeesSelectors';\n\nexport const getActiveUsersId = state => state.selectedEmployeesId;\n\nexport const getSelectedEmployees = state => {\n  const allUsers = getAllEmployees(state);\n  const selectedUsersId = getActiveUsersId(state);\n  const selectedUsers = allUsers.filter(item =>\n    [item.id].every(e => selectedUsersId.includes(e)),\n  );\n\n  return selectedUsers;\n};\n","import { useSelector } from 'react-redux';\nimport { RadioControls } from 'components';\nimport { UserItem, User } from './EmployeesList.style';\nimport { getActiveUsersId } from 'redux/selectedEmployees/selectedEmployeesSelectors';\n\nconst EmployeesItem = ({ id, firstName, lastName }) => {\n  const isActiveUser = useSelector(getActiveUsersId).includes(id);\n\n  return (\n    <UserItem>\n      <User activeClass={isActiveUser}>{`${lastName} ${firstName}`}</User>\n      <RadioControls id={id} />\n    </UserItem>\n  );\n};\n\nconst EmployeesList = ({ employees }) => {\n  return (\n    <ul>\n      {employees.map(user => (\n        <EmployeesItem key={user.id} {...user} />\n      ))}\n    </ul>\n  );\n};\n\nexport default EmployeesList;\n","import styled from 'styled-components';\n\nexport const EmployeesBirthdayWrap = styled.div`\n  width: 30%;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n`;\n\nexport const TitleMonth = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const UserList = styled.ul`\n  margin-bottom: 20px;\n`;\n\nexport const UserItem = styled.li`\n  position: relative;\n  padding-left: 25px;\n  margin-bottom: 5px;\n\n  &::before {\n    position: absolute;\n    content: '';\n    top: 50%;\n    left: 10px;\n    width: 8px;\n    height: 8px;\n    background: #000;\n    border-radius: 50%;\n    transform: translateY(-50%);\n  }\n`;\n","import { UserList, UserItem } from './EmployeesBirthday.style';\n\nconst EmployeesBirthdayList = ({ employees, onGetDate }) => {\n  return (\n    <UserList>\n      {employees.map(user => (\n        <UserItem key={user.id}>\n          {`${user.lastName} ${user.firstName}  - ${onGetDate(user.dob)}`}\n        </UserItem>\n      ))}\n    </UserList>\n  );\n};\n\nexport default EmployeesBirthdayList;\n","import { useSelector } from 'react-redux';\nimport {\n  EmployeesBirthdayWrap,\n  Title,\n  TitleMonth,\n} from './EmployeesBirthday.style';\nimport { getSelectedEmployees } from 'redux/selectedEmployees/selectedEmployeesSelectors';\nimport EmployeesBirthdayList from './EmployeesBirthdayList';\n\nconst monthsList = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December ',\n];\n\nconst EmployeesBirthday = () => {\n  const selectedUsers = useSelector(getSelectedEmployees);\n  const monthIdx = selectedUsers.map(user => new Date(user.dob).getMonth());\n  const uniqueMonthIdx = [...new Set(monthIdx)].sort((a, b) => a - b);\n  const currentMonth = new Date().getMonth();\n\n  const uniqueMonthIdxByStartToCurrentMonth = [\n    ...uniqueMonthIdx.splice(\n      uniqueMonthIdx.findIndex(idx => idx >= currentMonth),\n    ),\n    ...uniqueMonthIdx,\n  ];\n\n  const getFormatData = data => {\n    const fullData = new Date(data);\n    const day = fullData.getDate();\n    const month = monthsList[fullData.getMonth()];\n    const year = fullData.getFullYear();\n\n    return `${day} ${month}, ${year} year`;\n  };\n\n  const filterEmployeesByIdxMonth = idx =>\n    [...selectedUsers].filter(user =>\n      [new Date(user.dob).getMonth()].includes(idx),\n    );\n\n  const sortEmployees = idx =>\n    filterEmployeesByIdxMonth(idx).sort((a, b) =>\n      a.lastName.localeCompare(b.lastName),\n    );\n\n  return (\n    <EmployeesBirthdayWrap>\n      <Title>Employees birthday</Title>\n      {selectedUsers.length > 0 ? (\n        <>\n          <ul>\n            {uniqueMonthIdxByStartToCurrentMonth.map(monthIdx => (\n              <li key={monthIdx}>\n                <TitleMonth>{monthsList[monthIdx]}</TitleMonth>\n                <EmployeesBirthdayList\n                  employees={sortEmployees(monthIdx)}\n                  onGetDate={getFormatData}\n                />\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <h3>Employees List is empty</h3>\n      )}\n    </EmployeesBirthdayWrap>\n  );\n};\n\nexport default EmployeesBirthday;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const AddEmployeesId = createAction('selectedEmployees/AddEmployeesId');\nexport const DeleteEmployeesId = createAction(\n  'selectedEmployees/DeleteEmployeesId',\n);\n","import styled from 'styled-components';\n\nexport const RadioControlsWrap = styled.div`\n  padding-left: 15px;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  margin-bottom: 5px;\n  width: max-content;\n`;\n\nexport const RadioButton = styled.input`\n  cursor: pointer;\n  margin-right: 3px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  AddEmployeesId,\n  DeleteEmployeesId,\n} from 'redux/selectedEmployees/selectedEmployeesActions';\nimport {\n  RadioControlsWrap,\n  InputLabel,\n  RadioButton,\n} from './RadioControls.style';\nimport { getActiveUsersId } from 'redux/selectedEmployees/selectedEmployeesSelectors';\n\nconst RadioControls = ({ id }) => {\n  const isActive = useSelector(getActiveUsersId).includes(id);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const isCheckedInput = event.target.value === 'true' ? true : false;\n    isCheckedInput\n      ? dispatch(AddEmployeesId(id))\n      : dispatch(DeleteEmployeesId(id));\n  };\n\n  return (\n    <RadioControlsWrap>\n      <InputLabel>\n        <RadioButton\n          type=\"radio\"\n          value=\"false\"\n          checked={!isActive}\n          onChange={handleChange}\n        />\n        not active\n      </InputLabel>\n\n      <InputLabel>\n        <RadioButton\n          type=\"radio\"\n          value=\"true\"\n          checked={isActive}\n          onChange={handleChange}\n        />\n        active\n      </InputLabel>\n    </RadioControlsWrap>\n  );\n};\n\nexport default RadioControls;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchEmployeesRequest,\n  fetchEmployeesSuccess,\n  fetchEmployeesError,\n} from './employeesActions';\n\nconst entities = createReducer([], {\n  [fetchEmployeesSuccess]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchEmployeesRequest]: () => true,\n  [fetchEmployeesSuccess]: () => false,\n  [fetchEmployeesError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchEmployeesError]: (_, { payload }) => payload,\n  [fetchEmployeesRequest]: () => null,\n});\n\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { AddEmployeesId, DeleteEmployeesId } from './selectedEmployeesActions';\n\nconst selectedEmployees = createReducer([], {\n  [AddEmployeesId]: (state, { payload }) => [...state, payload],\n  [DeleteEmployeesId]: (state, { payload }) => [\n    ...state.filter(id => id !== payload),\n  ],\n});\n\nexport default selectedEmployees;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport employeesReducer from './employees/employeesReducer';\nimport selectedEmployeesReducer from './selectedEmployees/selectedEmployeesReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n  thunk,\n];\n\nconst activeUsersIdConfig = {\n  key: 'activeUsersId',\n  storage,\n  blacklist: ['employees'],\n};\n\nconst rootReducer = combineReducers({\n  employees: employeesReducer,\n  selectedEmployeesId: selectedEmployeesReducer,\n});\n\nconst persistedReducer = persistReducer(activeUsersIdConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { App } from './components';\nimport { store, persistor } from 'redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}